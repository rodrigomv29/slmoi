
from openai import OpenAI
from dotenv import load_dotenv
import os
from news_generator import APINews
import json


load_dotenv()

if __name__ == "__main__":

    api_key = os.getenv("OPENAI_API_KEY")

    client = OpenAI(
        api_key = api_key,
    )
    tools = [
        {
            "type": "function",
            "name": "get_news_headlines",
            "description": "Get current news headlines given a news category",
            "parameters":{
                "type": "object",
                "properties": {
                    "category": {
                        "type":"string",
                        "enum": [
                            "business",
                            "entertainment",
                            "general",
                            "health",
                            "science",
                            "sports",
                            "technology"
                        ],
                        "description": "News category for the articles that are to be returned"

                    }
                },
                
                "required": ["category"],
                "additionalProperties": False
            },
            "strict": True
            

        }
    ]

# Create a running input list we will add to over time
input_list = [
    {"role": "user", "content": "What are the news today regarding sports"}
]

# 2. Prompt the model with tools defined
response = client.responses.create(
    model="gpt-4.1",
    tools=tools,
    input=input_list,
)

news = APINews()
input_list+=response.output
for item in response.output:
    if item.type == "function_call":
        if item.name == "get_news_headlines":
            argument_dict = json.loads(item.arguments)
            headlines = news.get_news_headlines(argument_dict['category'])
            input_list.append({
                "type": "function_call_output",
                "call_id": item.call_id,
                "output": json.dumps({
                    "headlines": headlines
                })
            })
print("final input: ")
print(input_list)

response = client.responses.create(
    model="gpt-5",
    instructions="Respond only with news generated by a tool.",
    tools=tools,
    input=input_list,
)

print("Final output:")
print(response.model_dump_json(indent=2))
print("\n" + response.output_text)
